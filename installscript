#!/bin/bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

sudo apt-get update
sudo apt-get upgrade

# Install zsh
echo 'Install zsh'
echo '-----------'
sudo apt install zsh

# Change shell to ZSH
chsh -s $(which zsh)

# Install oh-my-zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh

# Install Python
echo 'Install python'
echo '--------------'
sudo apt-get install -y python3 python3-pip

# Install nvm
echo 'Install nvm'
echo '-----------'
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Install node
echo 'Install node'
echo '------------'
nvm install node

# Install PHP
echo 'Install PHP'
echo '-----------'
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo apt-get install php8.1 php8.1-dev php8.1-xml -y --allow-unauthenticated

# Install composer
echo 'Install Composer'
echo '----------------'
curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
HASH=`curl -sS https://composer.github.io/installer.sig`
php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
composer --version

# Install ripgrep
echo 'Install ripgrep'
echo '---------------'
sudo apt-get install -y ripgrep

# Install neovim
echo 'Install neovim'
echo '--------------'
curl https://github.com/neovim/neovim/releases/download/v0.7.0/nvim.appimage --output nvim.appimage
chmod u+x nvim.appimage && ./nvim.appimage
sudo mv nvim.appimage /usr/local/bin/nvim

# Install ctags
echo 'Install ctags'
echo '-------------'
sudo apt-get install ctags

# Install tmux
echo 'Install tmux'
echo '-------------'
sudo apt-get install -y tmux

# Install Lua LSP
echo 'Install Lua LSP'
echo '-------------'
curl https://github.com/sumneko/lua-language-server/releases/download/3.2.2/lua-language-server-3.2.2-linux-x64.tar.gz
mkdir -p $HOME/tools/lua-language-server
mv lua-language-server-3.2.2-linux-x64.tar.gz $HOME/tools/lua-language-server
cd $HOME/tools/lua-language-server
tar -xvf lua-language-server-3.2.2-linux-x64.tar.gz
cd $HOME


# Install intelephense
echo 'Install intelephense'
echo '--------------------'
npm i -g intelephense
echo '--------------------'
echo 'Please provide your intelephense key'
read -s -p INTELEPHENSE_KEY
if test -z "$INTELEPHENSE_KEY"; then
    echo 'Creating licence.txt...'
    echo $INTELEPHENSE_KEY > $HOME/intelephense/licence.txt
    echo 'Created licence.txt in ${HOME}/intelephense/licence.txt!'
else
    echo 'Skipping intelephense premium configuration.'
    echo 'See https://github.com/yaegassy/coc-intelephense#enabling-the-premium-feature'
fi

# Install typescript (and lsp)
echo 'Install typescript'
echo '------------------'
npm i -g typescript typescript-language-server

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/.zshrc $HOME/.zshrc

# Symlink tmux prefs
rm $HOME/.tmux.conf
ln -s $HOME/.dotfiles/.tmux.conf $HOME/.tmux.conf

# Symlink neovim prefs
rm -rf $HOME/.config/nvim/
ln -s $HOME/.dotfiles/nvim $HOME/.config/

# Symlink nitrogen
rm -rf $HOME/.config/nitrogen/
ln -s $HOME/.dotfiles/nitrogen $HOME/.config/

# Symlink i3
rm -rf $HOME/.config/i3/
ln -s $HOME/.dotfiles/i3 $HOME/.config/

# Symlink polybar
rm -rf $HOME/.config/polybar/
ln -s $HOME/.dotfiles/polybar $HOME/.config/

# Symlink picom
rm -rf $HOME/.config/picom/
ln -s $HOME/.dotfiles/picom $HOME/.config/

# Symlink kitty
rm -rf $HOME/.config/kitty/
ln -s $HOME/.dotfiles/kitty $HOME/.config/

# Symlink rofi
rm -rf $HOME/.config/rofi/
ln -s $HOME/.dotfiles/rofi $HOME/.config/

echo ''
echo 'All done!'
echo ''
echo 'We have tried our best to install everything, but who knows how well it worked.'
